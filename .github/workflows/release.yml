name: Rust SDK Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
        default: "0.0.1"
      dryrun:
        description: "Dry run mode: do not publish or release"
        required: false
        default: "true"

jobs:
  release:
    runs-on: [ self-hosted, Linux, X64 ]
    permissions:
      contents: write
    env:
      PACKAGE_PATH: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Update Cargo.toml version
        run: |
          sed -i 's/^version = ".*"/version = "${{ github.event.inputs.version }}"/' ${{ env.PACKAGE_PATH }}/Cargo.toml

      - name: Publish Crates
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          # Convert the dryrun input string to a boolean
          dry-run: ${{ github.event.inputs.dryrun == 'true' }}
          path: ${{ env.PACKAGE_PATH }}
          args: "--allow-dirty"

      - name: Create GitHub Release
        if: ${{ github.event.inputs.dryrun != 'true' }}
        uses: ncipollo/release-action@v1
        with:
          tag: release/${{ github.event.inputs.version }}
          name: Rust SDK ${{ github.event.inputs.version }}
          removeArtifacts: true
          omitBody: true
          allowUpdates: true
